{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/vladprus/graphql-apollo-course/client/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { useMutation, useQuery } from \"@apollo/client\";\nimport { getAllUsers, getUser } from \"./query/user\";\nimport { createUser } from \"./mutations/user\";\nimport './';\n\nconst App = () => {\n  _s();\n\n  const {\n    data,\n    loading,\n    error,\n    refetch\n  } = useQuery(getAllUsers);\n  const {\n    data: oneUser,\n    loading: loadingOneUser\n  } = useQuery(getUser, {\n    variables: {\n      id: 1\n    }\n  });\n  const [newUser] = useMutation(createUser);\n  const [users, setUsers] = useState([]);\n  const [username, setUsername] = useState('');\n  const [age, setAge] = useState(0);\n  useEffect(() => {\n    if (!loading) {\n      setUsers(data.getAllUsers);\n    }\n  }, [data]);\n\n  const addUser = e => {\n    e.preventDefault();\n    newUser({\n      variables: {\n        input: {\n          username,\n          age\n        }\n      }\n    }).then(({\n      data\n    }) => {\n      console.log(data);\n      setUsername('');\n      setAge(0);\n    });\n  };\n\n  const getAll = e => {\n    e.preventDefault();\n    refetch();\n  };\n\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 16\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"text-3xl font-bold underline\",\n      children: \"Hello world!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"\",\n      children: \"Hello world!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 7\n  }, this);\n};\n\n_s(App, \"NQyUobbtiDjTjgecllKaKUd5V74=\", false, function () {\n  return [useQuery, useQuery, useMutation];\n});\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/vladprus/graphql-apollo-course/client/src/App.js"],"names":["React","useEffect","useState","useMutation","useQuery","getAllUsers","getUser","createUser","App","data","loading","error","refetch","oneUser","loadingOneUser","variables","id","newUser","users","setUsers","username","setUsername","age","setAge","addUser","e","preventDefault","input","then","console","log","getAll"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAeC,SAAf,EAA0BC,QAA1B,QAAyC,OAAzC;AACA,SAAQC,WAAR,EAAqBC,QAArB,QAAoC,gBAApC;AACA,SAAQC,WAAR,EAAqBC,OAArB,QAAmC,cAAnC;AACA,SAAQC,UAAR,QAAyB,kBAAzB;AACA,OAAO,IAAP;;AACA,MAAMC,GAAG,GAAG,MAAM;AAAA;;AACd,QAAM;AAACC,IAAAA,IAAD;AAAOC,IAAAA,OAAP;AAAgBC,IAAAA,KAAhB;AAAuBC,IAAAA;AAAvB,MAAkCR,QAAQ,CAACC,WAAD,CAAhD;AACA,QAAM;AAACI,IAAAA,IAAI,EAACI,OAAN;AAAeH,IAAAA,OAAO,EAAEI;AAAxB,MAA0CV,QAAQ,CAACE,OAAD,EAAU;AAC9DS,IAAAA,SAAS,EAAE;AACPC,MAAAA,EAAE,EAAE;AADG;AADmD,GAAV,CAAxD;AAKA,QAAM,CAACC,OAAD,IAAYd,WAAW,CAACI,UAAD,CAA7B;AACA,QAAM,CAACW,KAAD,EAAQC,QAAR,IAAoBjB,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACkB,QAAD,EAAWC,WAAX,IAA0BnB,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAACoB,GAAD,EAAMC,MAAN,IAAgBrB,QAAQ,CAAC,CAAD,CAA9B;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAI,CAACS,OAAL,EAAc;AACVS,MAAAA,QAAQ,CAACV,IAAI,CAACJ,WAAN,CAAR;AACH;AACJ,GAJQ,EAIN,CAACI,IAAD,CAJM,CAAT;;AAMA,QAAMe,OAAO,GAAIC,CAAD,IAAO;AACnBA,IAAAA,CAAC,CAACC,cAAF;AACAT,IAAAA,OAAO,CAAC;AACJF,MAAAA,SAAS,EAAE;AACPY,QAAAA,KAAK,EAAE;AACHP,UAAAA,QADG;AACOE,UAAAA;AADP;AADA;AADP,KAAD,CAAP,CAMGM,IANH,CAMQ,CAAC;AAACnB,MAAAA;AAAD,KAAD,KAAY;AAChBoB,MAAAA,OAAO,CAACC,GAAR,CAAYrB,IAAZ;AACAY,MAAAA,WAAW,CAAC,EAAD,CAAX;AACAE,MAAAA,MAAM,CAAC,CAAD,CAAN;AACH,KAVD;AAWH,GAbD;;AAcA,QAAMQ,MAAM,GAAGN,CAAC,IAAI;AAChBA,IAAAA,CAAC,CAACC,cAAF;AACAd,IAAAA,OAAO;AACV,GAHD;;AAKA,MAAIF,OAAJ,EAAa;AACT,wBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAP;AACH;;AAED,sBACE;AAAA,4BACE;AAAI,MAAA,SAAS,EAAC,8BAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAI,MAAA,SAAS,EAAC,EAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAMH,CA/CD;;GAAMF,G;UACsCJ,Q,EACQA,Q,EAK9BD,W;;;KAPhBK,G;AAiDN,eAAeA,GAAf","sourcesContent":["import React, {useEffect, useState} from 'react';\nimport {useMutation, useQuery} from \"@apollo/client\";\nimport {getAllUsers, getUser} from \"./query/user\";\nimport {createUser} from \"./mutations/user\";\nimport './'\nconst App = () => {\n    const {data, loading, error, refetch} = useQuery(getAllUsers)\n    const {data:oneUser, loading: loadingOneUser} = useQuery(getUser, {\n        variables: {\n            id: 1\n        }\n    })\n    const [newUser] = useMutation(createUser)\n    const [users, setUsers] = useState([])\n    const [username, setUsername] = useState('')\n    const [age, setAge] = useState(0)\n\n    useEffect(() => {\n        if (!loading) {\n            setUsers(data.getAllUsers)\n        }\n    }, [data])\n\n    const addUser = (e) => {\n        e.preventDefault()\n        newUser({\n            variables: {\n                input: {\n                    username, age\n                }\n            }\n        }).then(({data}) => {\n            console.log(data)\n            setUsername('')\n            setAge(0)\n        })\n    }\n    const getAll = e => {\n        e.preventDefault()\n        refetch()\n    }\n\n    if (loading) {\n        return <h1>Loading...</h1>\n    }\n\n    return (\n      <div>\n        <h1 className=\"text-3xl font-bold underline\">Hello world!</h1>\n        <h1 className=\"\">Hello world!</h1>\n      </div>\n    );\n};\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}